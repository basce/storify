<?php
namespace storify\project;

class submission{
	
	private $tbl_submission;
	private $tbl_submission_history;
	private $tbl_submission_response;

	public function __construct(){
		global $wpdb;

		$this->tbl_submission = $wpdb->prefix."project_submission";
		$this->tbl_submission_history = $wpdb->prefix."project_submission_history";
		$this->tbl_submission_response = $wpdb->prefix."project_submission_response";
	}  

	public function getSubmissionTable(){
		return $this->tbl_submission;
	}

	public function getSubmissionHistoryTable(){
		return $this->tbl_submission_history;
	}

	public function getSubmissionResponseTable(){
		return $this->tbl_submission_response;
	}

	public function getSubmissionDetail($submission_id){
		global $wpdb;

		$query = "SELECT deliverable_id, user_id FROM `".$this->tbl_submission."` WHERE id = %d";
		return $wpdb->get_row($wpdb->prepare($query, $submission_id), ARRAY_A);
	}

	public function submit($deliverable_id, $userid, $url, $remark){
		global $wpdb;

		//check if item accepted, if accepted not supposed to overwrite
		$status = $this->checkSubmission($deliverable_id, $userid);
		if($status == "accepted"){
			//already accepted, lock from being re-submit
			return array(
				"error"=>1,
				"success"=>0,
				"msg"=>"asset is accepted"
			);
		}else if($status == "pending"){
			//still in pending stage, allow change
			
			$query = "UPDATE `".$this->tbl_submission."` SET URL = %s, remark = %s, status = %s, status_remark = %s WHERE deliverable_id = %d AND user_id = %d";
			$wpdb->query($wpdb->prepare($query, $url, $remark, "pending", "", $deliverable_id, $userid)); //update submission

			return array(
				"error"=>0,
				"success"=>1,
				"msg"=>"Update success"
			);

		}else if($status == "rejected"){
			//is rejected, move to history, and create a new submission
			$query = "SELECT id, deliverable_id, URL, remark, user_id, status, tt FROM `".$this->tbl_submission."` WHERE deliverable_id = %d AND user_id = %d";
			$rs = $wpdb->get_row($wpdb->prepare($query, $deliverable_id, $userid), ARRAY_A);

			$query = "INSERT INTO `".$this->tbl_submission_history."` ( submission_id, deliverable_id, URL, remark, user_id, status, submission_tt ) VALUES ( %d, %d, %s, %s, %d, %s, %s )";
			$wpdb->query($wpdb->prepare($query, $rs["id"], $rs["deliverable_id"], $rs["URL"], $rs["remark"], $rs["user_id"], $rs["status"], $rs["tt"]));

			//remove from table, reduce load
			$query = "DELECT FROM `".$this->tbl_submission."` WHERE id = %d";
			$wpdb->query($wpdb->prepare($query, $rs["id"]));

			//create a new submission
			$query = "INSERT INTO `".$this->tbl_submission."` ( deliverable_id, URL, remark, user_id, status ) VALUES ( %d, %s, %s, %d, %s )";
			$wpdb->query($wpdb->prepare($query, $deliverable_id, $url, $remark, $userid, "pending"));				

			return array(
				"error"=>0,
				"success"=>1,
				"msg"=>"resubmit success"
			);
		}else{
			//new submission
			$query = "INSERT INTO `".$this->tbl_submission."` ( deliverable_id, URL, remark, user_id, status ) VALUES ( %d, %s, %s, %d, %s )";
			$wpdb->query($wpdb->prepare($query, $deliverable_id, $url, $remark, $userid, "pending"));

			return array(
				"error"=>0,
				"success"=>1,
				"msg"=>"submit success"
			);
		}
	}

	public function getHistoryByDeliverable($deliverable_id){
		global $wpdb;

		$query = "SELECT a.submission_id, a.deliverable_id, a.URL, a.remark as `submission_remark`, a.user_id as `submittor`, a.status, a.submission_tt, b.user_id as `owner`, b.remark as `response_remark` FROM `".$this->tbl_submission_history."` a LEFT JOIN `".$this->tbl_submission_response."` b ON a.submission_id = b.submission_id WHERE a.deliverable_id = %d";
		return $wpdb->get_results($wpdb->prepare($query, $deliverable_id));

	}

	public function checkSubmission($deliverable_id, $userid){
		global $wpdb;

		$query = "SELECT status FROM `".$this->tbl_submission."` WHERE deliverable_id = %d AND user_id = %d";
		return $wpdb->get_var($wpdb->prepare($query, $deliverable_id, $userid));
	}

	public function admin_response($submission_id, $admin_user_id, $status, $status_remark){
		global $wpdb;

		$query = "SELECT COUNT(*) FROM `".$this->tbl_submission."` WHERE id = %d";
		if($wpdb->get_var($wpdb->prepare($query, $submission_id))){
			//exist
			$query = "SELECT id FROM `".$this->tbl_submission_response."` WHERE submission_id = %d";
			$reponse_id = $wpdb->get_var($wpdb->prepare($query, $submission_id));
			if($reponse_id){
				$query = "UPDATE `".$this->tbl_submission_response."` SET user_id = %d, status = %s, remark = %s WHERE id = %d";
				$wpdb->query($wpdb->prepare($query, $admin_user_id, $status, $status_remark, $reponse_id));
			}else{
				$query = "INSERT INTO `".$this->tbl_submission_response."` ( submission_id, user_id, status, remark ) VALUES ( %d, %d, %s, %s )";
				$wpdb->query($wpdb->prepare($query, $submission_id, $admin_user_id, $status, $status_remark));
			}

			//update submission table status
			$query = "UPDATE `".$this->tbl_submission."` SET status = %s WHERE id = %d";
			$wpdb->query($wpdb->prepare($query, $status, $submission_id));

			return array(
				"error"=>0,
				"success"=>1,
				"msg"=>""
			);
		}else{
			return array(
				"error"=>1,
				"success"=>0,
				"msg"=>"submission doesn't exist"
			);
		}
	}
}